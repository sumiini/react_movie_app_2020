{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","propTpyes","id","PropTypes","number","isRequired","string","arrayOf","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qTAOA,SAASA,EAAT,GAAmD,IAAnCC,EAAkC,EAAlCA,KAAKC,EAA6B,EAA7BA,MAAMC,EAAuB,EAAvBA,QAAQC,EAAe,EAAfA,OAAOC,EAAQ,EAARA,OAEtC,OAAQ,yBAAKC,UAAU,iBACnB,yBAAKA,UAAU,SACX,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,wBAAII,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBAAiBD,EAAOI,KAAI,SAACC,EAAMC,GAAP,OAAe,wBAAIC,IAAKD,EAAOL,UAAU,iBAAiBI,OACpG,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAE,KAA/C,SAUZb,EAAMc,UAAU,CACZC,GAAIC,IAAUC,OAAOC,WACrBjB,KAAKe,IAAUC,OAAOC,WACtBhB,MAAOc,IAAUG,OAAOD,WACxBf,QAASa,IAAUG,OAAOD,WAC1Bd,OAAQY,IAAUG,OAAOD,WACzBb,OAAQW,IAAUI,QAAQJ,IAAUG,QAAQD,YAGjClB,QCEAqB,E,4MA9BbC,MAAM,CACJC,WAAW,EACXC,OAAQ,I,EAIVC,U,sBAAU,8BAAAC,EAAA,sEAC6BC,IAAMC,IAAI,4DADvC,gBACWJ,EADX,EACDK,KAAMA,KAAML,OACnB,EAAKM,SAAS,CAACN,SAAOD,WAAU,IAFxB,2C,kEAKRQ,KAAKN,c,+BAEE,IAAD,EACmBM,KAAKT,MAAxBC,EADA,EACAA,UAAWC,EADX,EACWA,OAClB,OAAO,6BAASlB,UAAU,aACvBiB,EAAY,yBAAKjB,UAAU,UAC1B,0BAAMA,UAAU,gBAAhB,eAGF,yBAAKA,UAAU,UACZkB,EAAOf,KAAI,SAAAuB,GAAK,OACf,kBAAC,EAAD,CAAOpB,IAAKoB,EAAMjB,GAAIA,GAAIiB,EAAMjB,GAAId,KAAM+B,EAAM/B,KAAMC,MAAO8B,EAAM9B,MAAOC,QAAS6B,EAAM7B,QAASC,OAAQ4B,EAAMC,mBAAoB5B,OAAQ2B,EAAM3B,kB,GAxBzI6B,IAAMC,WCIxBC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.59ea7fcd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./App.css\";\r\n\r\n\r\n// component가 state가 필요 없을 경우에는 class component가될 필요없다.\r\n\r\nfunction Movie({year,title,summary,poster,genres}){\r\n\r\n    return (<div className=\"movies__movie\">\r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title}></img>\r\n            <h3 className=\"movie__title\">{title}</h3>\r\n            <h5 className=\"movie__year\">{year}</h5>\r\n            <ul className=\"movie__genres\">{genres.map((genre,index)=><li key={index} className=\"genres__genre\">{genre}</li>)}</ul>\r\n            <p className=\"movie__summary\">{summary.slice(0,140)}...</p>\r\n            \r\n        </div>\r\n        \r\n\r\n\r\n    \r\n    </div>);\r\n}\r\n\r\nMovie.propTpyes={\r\n    id: PropTypes.number.isRequired,\r\n    year:PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from 'react';\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\nclass App extends React.Component{\n\n  state={\n    isLoading: true,\n    movies: []\n  }\n\n  //axios.get 은 완료되기까지 시간이 조금 필요하기때문에 await를 넣음\n  getMovies=async()=>{\n    const {data:{data:{movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({movies,isLoading:false})\n  }\n  componentDidMount(){\n    this.getMovies();\n  }\n  render(){\n   const {isLoading, movies}=this.state;\n   return <section className=\"container\"> \n     {isLoading ? <div className=\"loader\">\n       <span className=\"loader__text\">Loading...</span>\n\n     </div>:\n     <div className=\"movies\">\n       {movies.map(movie => (\n         <Movie key={movie.id} id={movie.id} year={movie.year} title={movie.title} summary={movie.summary} poster={movie.medium_cover_image} genres={movie.genres}/>))}\n\n     </div>\n\n     }</section>\n  }\n}\n\nexport default App;\n\n// map은 array의 각 item에서 function을 실행하는 array를 가지는 javascript function이며 ,\n// 그 function의 result를 갖는 array를 반환","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// <App /> 이 부분이 component를 사용하고자 할 때, component의 형태이다. react는 component를 사용해서 html처럼 작성해야한다.\n// 그래서 javascript와 html 사이의 이러한 조합을 jsx라고 부른다.\n// react application은 한 번에 하나의 component만 rendering 할 수 있다.\n// 그래서 모든 것은 App안에 들어가야한다. App안에서 많은 component를 넣을 수 있다.\n// 그리고 이러한 component안에 더 많은 component를 import 할 수 있다.\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}